CREATE TABLE Func_Restaurante (
    ID_funcionario INTEGER PRIMARY KEY,
    Nome VARCHAR(100),
    Salario DECIMAL(10,2),
    CPF VARCHAR(11),
    Data_Contrato DATE,
    Cargo VARCHAR(50),
    ID_Cozinheiro INTEGER,
    Atuacao_Cozinha VARCHAR(100),
    Turno VARCHAR(50),
    TempoExperiencia INTEGER,
    Salario_Mes_CZ DECIMAL(10,2),
    ID_chef INTEGER,
    Especialidade VARCHAR(100),
    Certificados VARCHAR(100),
    Equipe VARCHAR(100),
    Salario_Mes_Chef DECIMAL(10,2),
    ID_Garcon INTEGER,
    Avaliacao DECIMAL(5,2),
    Pedidos_Dos_Clientes INTEGER,
    Salario_Mes_GC DECIMAL(10,2),
    Func_Restaurante_TIPO VARCHAR(50),
    fk_Pedido_ID_Pedido INTEGER,
    fk_Func_Restaurante_ID_funcionario INTEGER,
    fk_Func_Restaurante_ID_Cozinheiro INTEGER,
    fk_Func_Restaurante_ID_chef INTEGER,
    fk_Func_Restaurante_ID_Garcon INTEGER,
    FOREIGN KEY (fk_Pedido_ID_Pedido) REFERENCES Pedido(ID_Pedido)
);

CREATE TABLE Pedido (
    ID_Pedido INTEGER PRIMARY KEY,
    Data_Hora DATETIME,
    Status_Pedido VARCHAR(50),
    Mesa INTEGER,
    fk_Pagamento_Cliente_ID_Pagamento INTEGER,
    fk_Pedido_Preparacao_Status_Preparacao INTEGER,
    FOREIGN KEY (fk_Pagamento_Cliente_ID_Pagamento) REFERENCES Pagamento_Cliente(ID_Pagamento),
    FOREIGN KEY (fk_Pedido_Preparacao_Status_Preparacao) REFERENCES Pedido_Preparacao(ID_Pedido_Preparacao)
);

CREATE TABLE Cliente (
    ID_cliente INTEGER PRIMARY KEY,
    Nome VARCHAR(100),
    Contato VARCHAR(50),
    fk_Pedido_ID_Pedido INTEGER,
    FOREIGN KEY (fk_Pedido_ID_Pedido) REFERENCES Pedido(ID_Pedido)
);

CREATE TABLE Cardapio (
    ID_cardapio INTEGER PRIMARY KEY,
    Nome_Itens VARCHAR(100),
    Descricao VARCHAR(255),
    Preco DECIMAL(10,2)
);

CREATE TABLE Pedido_Item (
    Quantidade INTEGER,
    Observacoes VARCHAR(255),
    PRIMARY KEY (Quantidade)
);

CREATE TABLE Pagamento_Cliente (
    ID_Pagamento INTEGER PRIMARY KEY,
    Valor DECIMAL(10,2),
    Data_Pagamento DATE,
    Forma_Pagamento VARCHAR(50),
    fk_Financeiro_Restaurante_ID_Financeiro INTEGER,
    fk_Cliente_ID_cliente INTEGER,
    FOREIGN KEY (fk_Financeiro_Restaurante_ID_Financeiro) REFERENCES Financeiro_Restaurante(ID_Financeiro),
    FOREIGN KEY (fk_Cliente_ID_cliente) REFERENCES Cliente(ID_cliente)
);

CREATE TABLE Turno (
    ID_Turno INTEGER PRIMARY KEY,
    Descricao VARCHAR(100),
    fk_Func_Restaurante_ID_funcionario INTEGER,
    fk_Func_Restaurante_ID_Cozinheiro INTEGER,
    fk_Func_Restaurante_ID_chef INTEGER,
    fk_Func_Restaurante_ID_Garcon INTEGER,
    FOREIGN KEY (fk_Func_Restaurante_ID_funcionario) REFERENCES Func_Restaurante(ID_funcionario),
    FOREIGN KEY (fk_Func_Restaurante_ID_Cozinheiro) REFERENCES Func_Restaurante(ID_funcionario),
    FOREIGN KEY (fk_Func_Restaurante_ID_chef) REFERENCES Func_Restaurante(ID_funcionario),
    FOREIGN KEY (fk_Func_Restaurante_ID_Garcon) REFERENCES Func_Restaurante(ID_funcionario)
);

CREATE TABLE Pedido_Preparacao (
    ID_Pedido_Preparacao INTEGER PRIMARY KEY,
    Data_Hora_Inicio DATETIME,
    Data_Hora_Fim DATETIME,
    Status_Preparacao VARCHAR(50)
);

CREATE TABLE Financeiro_Restaurante (
    ID_Financeiro INTEGER PRIMARY KEY,
    ID_Pagamendo_CL INTEGER,
    ID_Pagamento_Func INTEGER,
    fk_Pedido_ID_Pedido INTEGER,
    fk_Dono_Restaurante_ID_Dono INTEGER,
    FOREIGN KEY (fk_Pedido_ID_Pedido) REFERENCES Pedido(ID_Pedido),
    FOREIGN KEY (fk_Dono_Restaurante_ID_Dono) REFERENCES Dono_Restaurante(ID_Dono)
);

CREATE TABLE Dono_Restaurante (
    ID_Dono INTEGER PRIMARY KEY,
    Nome VARCHAR(100),
    Passe_Livre BIT,
    fk_Pagamento_D_Alocacao_Id_pagamento INTEGER,
    FOREIGN KEY (fk_Pagamento_D_Alocacao_Id_pagamento) REFERENCES Pagamento_D_Alocacao(ID_Pagamento)
);

CREATE TABLE Pagamento_D_Alocacao (
    ID_Pagamento INTEGER PRIMARY KEY,
    Valor DECIMAL(10,2)
);

CREATE TABLE Inclui_Item (
    fk_Pedido_ID_Pedido INTEGER,
    fk_Pedido_Item_Quantidade INTEGER,
    PRIMARY KEY (fk_Pedido_ID_Pedido, fk_Pedido_Item_Quantidade),
    FOREIGN KEY (fk_Pedido_ID_Pedido) REFERENCES Pedido(ID_Pedido),
    FOREIGN KEY (fk_Pedido_Item_Quantidade) REFERENCES Pedido_Item(Quantidade)
);

CREATE TABLE Referido_por (
    fk_Pedido_Item_Quantidade INTEGER,
    fk_Cardapio_ID_cardapio INTEGER,
    PRIMARY KEY (fk_Pedido_Item_Quantidade, fk_Cardapio_ID_cardapio),
    FOREIGN KEY (fk_Pedido_Item_Quantidade) REFERENCES Pedido_Item(Quantidade),
    FOREIGN KEY (fk_Cardapio_ID_cardapio) REFERENCES Cardapio(ID_cardapio)
);

CREATE TABLE Prepara (
    fk_Func_Restaurante_ID_funcionario INTEGER,
    fk_Func_Restaurante_ID_Cozinheiro INTEGER,
    fk_Func_Restaurante_ID_Garcon INTEGER,
    fk_Func_Restaurante_ID_chef INTEGER,
    fk_Pedido_Preparacao_Status_Preparacao INTEGER,
    PRIMARY KEY (fk_Func_Restaurante_ID_funcionario, fk_Func_Restaurante_ID_Cozinheiro, fk_Func_Restaurante_ID_Garcon, fk_Func_Restaurante_ID_chef),
    FOREIGN KEY (fk_Pedido_Preparacao_Status_Preparacao) REFERENCES Pedido_Preparacao(ID_Pedido_Preparacao)
);

CREATE TABLE PG_Func (
    fk_Func_Restaurante_ID_funcionario INTEGER,
    fk_Func_Restaurante_ID_Cozinheiro INTEGER,
    fk_Func_Restaurante_ID_chef INTEGER,
    fk_Func_Restaurante_ID_Garcon INTEGER,
    fk_Financeiro_Restaurante_ID_Financeiro INTEGER,
    PRIMARY KEY (fk_Func_Restaurante_ID_funcionario, fk_Func_Restaurante_ID_Cozinheiro, fk_Func_Restaurante_ID_chef, fk_Func_Restaurante_ID_Garcon),
    FOREIGN KEY (fk_Financeiro_Restaurante_ID_Financeiro) REFERENCES Financeiro_Restaurante(ID_Financeiro)
);
